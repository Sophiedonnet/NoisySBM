% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initInferenceScoreSBM.R
\name{initInferenceScoreSBM}
\alias{initInferenceScoreSBM}
\title{Initialization of the inference procedure}
\usage{
initInferenceScoreSBM(scoreList, directed = FALSE, estimOptions = list())
}
\arguments{
\item{scoreList}{a list of the Scores (matrices of size nbNodes x nbNodes)}

\item{directed}{a logical : TRUE if the underlying network is directed,  FALSE otherwise (default value FALSE).}

\item{estimOptions}{a list of parameters controlling the initialisation step of the inference method. See details.}
}
\value{
An initialisation point (list, see Details here after) for the VEM algortihms for several numbers of blocks
}
\description{
This function initialises the inference method by mixing a Gaussian mixture on the scores of each pair of nodes and a SBM on the resulting estimated network G
}
\details{
The list of parameters \code{estimOptions} essentially tunes the optimization process and the variational EM algorithm, with the following parameters
\itemize{
\item{"nbCores"}{integer for number of cores used. Default is detectCores()}
\item{"exploreFactor"}{control the exploration of the number of groups}
\item{"nbBlocksRange"}{minimal and maximal number or blocks explored}
}

The output is a list containing the following entries.
\itemize{
\item{"G": }{estimated underlyling network (binary)}
\item{"psi": }{estimated probability for each pair of nodes to be linked or not}
\item{"tau": }{list of posterior probabilities for each not to be in a blocks. The length of the list corresponds to the various models explored by the SBM }
\item{"ICL": }{Penalized likelihood for each of the estimated model}
}
}
\examples{
nbNodes  = 60
directed = TRUE
blockProp = c(1/3,1/2,1/6)
nbBlocks   = length(blockProp)
connectParam <- matrix(rbeta(nbBlocks^2,1.5,1.5 ),nbBlocks,nbBlocks)
connectParam <- 0.5*(connectParam + t(connectParam))
emissionParam <- list()
nbScores <- 2
emissionParam$noEdgeParam <- list(mean=rep(0,nbScores));
emissionParam$noEdgeParam$var <- diag(0.1,nrow = nbScores,ncol = nbScores)
emissionParam$edgeParam <- list( mean= 1:nbScores)
emissionParam$edgeParam$var <-  diag(0.1,nrow = nbScores,ncol = nbScores)
dataSim <- rScoreSBM(nbNodes,directed, blockProp,connectParam,emissionParam,seed = NULL)
init <- initInferenceScoreSBM(dataSim$scoreNetworks)
}
